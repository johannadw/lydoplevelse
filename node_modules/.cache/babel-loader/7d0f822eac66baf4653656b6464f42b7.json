{"ast":null,"code":"import { useMemo } from 'react';\nimport { SourceConnector } from '../../internals/index.js';\nimport { useDragDropManager } from '../useDragDropManager.js';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js';\nexport function useDragSourceConnector(dragSourceOptions, dragPreviewOptions) {\n  var manager = useDragDropManager();\n  var connector = useMemo(function () {\n    return new SourceConnector(manager.getBackend());\n  }, [manager]);\n  useIsomorphicLayoutEffect(function () {\n    connector.dragSourceOptions = dragSourceOptions || null;\n    connector.reconnect();\n    return function () {\n      return connector.disconnectDragSource();\n    };\n  }, [connector, dragSourceOptions]);\n  useIsomorphicLayoutEffect(function () {\n    connector.dragPreviewOptions = dragPreviewOptions || null;\n    connector.reconnect();\n    return function () {\n      return connector.disconnectDragPreview();\n    };\n  }, [connector, dragPreviewOptions]);\n  return connector;\n}","map":{"version":3,"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AAEA,SAASC,eAAT,QAAgC,0BAAhC;AAKA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,SAASC,yBAAT,QAA0C,iCAA1C;AAEA,OAAO,SAASC,sBAAT,CACNC,iBADM,EAENC,kBAFM,EAGY;AAClB,MAAMC,OAAO,GAAGL,kBAAkB,EAAlC;AACA,MAAMM,SAAS,GAAGR,OAAO,CACxB;AAAA,WAAM,IAAIC,eAAJ,CAAoBM,OAAO,CAACE,UAARF,EAApB,CAAN;AAAA,GADwB,EAExB,CAACA,OAAD,CAFwB,CAAzB;AAIAJ,2BAAyB,CAAC,YAAM;AAC/BK,aAAS,CAACH,iBAAVG,GAA8BH,iBAAiB,IAAI,IAAnDG;AACAA,aAAS,CAACE,SAAVF;AACA,WAAO;AAAA,aAAMA,SAAS,CAACG,oBAAVH,EAAN;AAAA,KAAP;AACA,GAJwB,EAItB,CAACA,SAAD,EAAYH,iBAAZ,CAJsB,CAAzBF;AAKAA,2BAAyB,CAAC,YAAM;AAC/BK,aAAS,CAACF,kBAAVE,GAA+BF,kBAAkB,IAAI,IAArDE;AACAA,aAAS,CAACE,SAAVF;AACA,WAAO;AAAA,aAAMA,SAAS,CAACI,qBAAVJ,EAAN;AAAA,KAAP;AACA,GAJwB,EAItB,CAACA,SAAD,EAAYF,kBAAZ,CAJsB,CAAzBH;AAKA,SAAOK,SAAP;AACA","names":["useMemo","SourceConnector","useDragDropManager","useIsomorphicLayoutEffect","useDragSourceConnector","dragSourceOptions","dragPreviewOptions","manager","connector","getBackend","reconnect","disconnectDragSource","disconnectDragPreview"],"sources":["/Users/johannadeweerdt/Documents/school/erasmus/code/lydoplevelse/node_modules/react-dnd/src/hooks/useDrag/useDragSourceConnector.ts"],"sourcesContent":["import { useMemo } from 'react'\n\nimport { SourceConnector } from '../../internals/index.js'\nimport type {\n\tDragPreviewOptions,\n\tDragSourceOptions,\n} from '../../types/index.js'\nimport { useDragDropManager } from '../useDragDropManager.js'\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect.js'\n\nexport function useDragSourceConnector(\n\tdragSourceOptions: DragSourceOptions | undefined,\n\tdragPreviewOptions: DragPreviewOptions | undefined,\n): SourceConnector {\n\tconst manager = useDragDropManager()\n\tconst connector = useMemo(\n\t\t() => new SourceConnector(manager.getBackend()),\n\t\t[manager],\n\t)\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragSourceOptions = dragSourceOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragSource()\n\t}, [connector, dragSourceOptions])\n\tuseIsomorphicLayoutEffect(() => {\n\t\tconnector.dragPreviewOptions = dragPreviewOptions || null\n\t\tconnector.reconnect()\n\t\treturn () => connector.disconnectDragPreview()\n\t}, [connector, dragPreviewOptions])\n\treturn connector\n}\n"]},"metadata":{},"sourceType":"module"}