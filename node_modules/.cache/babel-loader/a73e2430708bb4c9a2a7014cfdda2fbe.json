{"ast":null,"code":"export function registerTarget(type, target, manager) {\n  var registry = manager.getRegistry();\n  var targetId = registry.addTarget(type, target);\n  return [targetId, function () {\n    return registry.removeTarget(targetId);\n  }];\n}\nexport function registerSource(type, source, manager) {\n  var registry = manager.getRegistry();\n  var sourceId = registry.addSource(type, source);\n  return [sourceId, function () {\n    return registry.removeSource(sourceId);\n  }];\n}","map":{"version":3,"mappings":"AAUA,OAAO,SAASA,cAAT,CACNC,IADM,EAENC,MAFM,EAGNC,OAHM,EAIsB;AAC5B,MAAMC,QAAQ,GAAGD,OAAO,CAACE,WAARF,EAAjB;AACA,MAAMG,QAAQ,GAAGF,QAAQ,CAACG,SAATH,CAAmBH,IAAnBG,EAAyBF,MAAzBE,CAAjB;AAEA,SAAO,CAACE,QAAD,EAAW;AAAA,WAAMF,QAAQ,CAACI,YAATJ,CAAsBE,QAAtBF,CAAN;AAAA,GAAX,CAAP;AACA;AAED,OAAO,SAASK,cAAT,CACNR,IADM,EAENS,MAFM,EAGNP,OAHM,EAIsB;AAC5B,MAAMC,QAAQ,GAAGD,OAAO,CAACE,WAARF,EAAjB;AACA,MAAMQ,QAAQ,GAAGP,QAAQ,CAACQ,SAATR,CAAmBH,IAAnBG,EAAyBM,MAAzBN,CAAjB;AAEA,SAAO,CAACO,QAAD,EAAW;AAAA,WAAMP,QAAQ,CAACS,YAATT,CAAsBO,QAAtBP,CAAN;AAAA,GAAX,CAAP;AACA","names":["registerTarget","type","target","manager","registry","getRegistry","targetId","addTarget","removeTarget","registerSource","source","sourceId","addSource","removeSource"],"sources":["/Users/johannadeweerdt/Documents/school/erasmus/code/lydoplevelse-test/node_modules/react-dnd/src/internals/registration.ts"],"sourcesContent":["import type {\n\tDragDropManager,\n\tDragSource,\n\tDropTarget,\n\tIdentifier,\n\tSourceType,\n\tTargetType,\n\tUnsubscribe,\n} from 'dnd-core'\n\nexport function registerTarget(\n\ttype: TargetType,\n\ttarget: DropTarget,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst targetId = registry.addTarget(type, target)\n\n\treturn [targetId, () => registry.removeTarget(targetId)]\n}\n\nexport function registerSource(\n\ttype: SourceType,\n\tsource: DragSource,\n\tmanager: DragDropManager,\n): [Identifier, Unsubscribe] {\n\tconst registry = manager.getRegistry()\n\tconst sourceId = registry.addSource(type, source)\n\n\treturn [sourceId, () => registry.removeSource(sourceId)]\n}\n"]},"metadata":{},"sourceType":"module"}