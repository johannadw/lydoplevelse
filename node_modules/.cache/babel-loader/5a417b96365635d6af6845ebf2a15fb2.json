{"ast":null,"code":"import _classCallCheck from \"/Users/johannadeweerdt/Documents/school/erasmus/code/bm-lyd-deploy/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/johannadeweerdt/Documents/school/erasmus/code/bm-lyd-deploy/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { invariant } from '@react-dnd/invariant';\nvar isCallingCanDrop = false;\nexport var DropTargetMonitorImpl = /*#__PURE__*/function () {\n  function DropTargetMonitorImpl(manager) {\n    _classCallCheck(this, DropTargetMonitorImpl);\n\n    this.targetId = null;\n    this.internalMonitor = manager.getMonitor();\n  }\n\n  _createClass(DropTargetMonitorImpl, [{\n    key: \"receiveHandlerId\",\n    value: function receiveHandlerId(targetId) {\n      this.targetId = targetId;\n    }\n  }, {\n    key: \"getHandlerId\",\n    value: function getHandlerId() {\n      return this.targetId;\n    }\n  }, {\n    key: \"subscribeToStateChange\",\n    value: function subscribeToStateChange(listener, options) {\n      return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n  }, {\n    key: \"canDrop\",\n    value: function canDrop() {\n      // Cut out early if the target id has not been set. This should prevent errors\n      // where the user has an older version of dnd-core like in\n      // https://github.com/react-dnd/react-dnd/issues/1310\n      if (!this.targetId) {\n        return false;\n      }\n\n      invariant(!isCallingCanDrop, 'You may not call monitor.canDrop() inside your canDrop() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor');\n\n      try {\n        isCallingCanDrop = true;\n        return this.internalMonitor.canDropOnTarget(this.targetId);\n      } finally {\n        isCallingCanDrop = false;\n      }\n    }\n  }, {\n    key: \"isOver\",\n    value: function isOver(options) {\n      if (!this.targetId) {\n        return false;\n      }\n\n      return this.internalMonitor.isOverTarget(this.targetId, options);\n    }\n  }, {\n    key: \"getItemType\",\n    value: function getItemType() {\n      return this.internalMonitor.getItemType();\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem() {\n      return this.internalMonitor.getItem();\n    }\n  }, {\n    key: \"getDropResult\",\n    value: function getDropResult() {\n      return this.internalMonitor.getDropResult();\n    }\n  }, {\n    key: \"didDrop\",\n    value: function didDrop() {\n      return this.internalMonitor.didDrop();\n    }\n  }, {\n    key: \"getInitialClientOffset\",\n    value: function getInitialClientOffset() {\n      return this.internalMonitor.getInitialClientOffset();\n    }\n  }, {\n    key: \"getInitialSourceClientOffset\",\n    value: function getInitialSourceClientOffset() {\n      return this.internalMonitor.getInitialSourceClientOffset();\n    }\n  }, {\n    key: \"getSourceClientOffset\",\n    value: function getSourceClientOffset() {\n      return this.internalMonitor.getSourceClientOffset();\n    }\n  }, {\n    key: \"getClientOffset\",\n    value: function getClientOffset() {\n      return this.internalMonitor.getClientOffset();\n    }\n  }, {\n    key: \"getDifferenceFromInitialOffset\",\n    value: function getDifferenceFromInitialOffset() {\n      return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n  }]);\n\n  return DropTargetMonitorImpl;\n}();","map":{"version":3,"mappings":";;AAAA,SAASA,SAAT,QAA0B,sBAA1B;AAYA,IAAIC,gBAAgB,GAAG,KAAvB;AAEA,WAAaC,qBAAb;AAIC,iCAAmBC,OAAnB,EAA6C;AAAA;;AAF7C,SAAQC,QAAR,GAAsC,IAAtC;AAGC,SAAKC,eAAL,GAAuBF,OAAO,CAACG,UAARH,EAAvB;AACA;;AANF;AAAA;AAAA,WAQC,0BAAwBC,QAAjBG,EAAoD;AAC1D,WAAKH,QAAL,GAAgBA,QAAhB;AACA;AAVF;AAAA;AAAA,WAYQI,wBAAkC;AACxC,aAAO,KAAKJ,QAAZ;AACA;AAdF;AAAA;AAAA,WAgBQK,gCACNC,QADMD,EAENE,OAFD,EAGe;AACd,aAAO,KAAKN,eAAL,CAAqBI,sBAArB,CAA4CC,QAA5C,EAAsDC,OAAtD,CAAP;AACA;AArBF;AAAA;AAAA,WAuBQC,mBAAmB;AACzB;AACA;AACA;AACA,UAAI,CAAC,KAAKR,QAAV,EAAoB;AACnB,eAAO,KAAP;AACA;;AACDJ,eAAS,CACR,CAACC,gBADO,EAER,8EACC,8EAHO,CAATD;;AAMA,UAAI;AACHC,wBAAgB,GAAG,IAAnBA;AACA,eAAO,KAAKI,eAAL,CAAqBQ,eAArB,CAAqC,KAAKT,QAA1C,CAAP;AACA,OAHD,SAGU;AACTH,wBAAgB,GAAG,KAAnBA;AACA;AACD;AA1CF;AAAA;AAAA,WA4CC,gBAAcU,OAAPG,EAAiD;AACvD,UAAI,CAAC,KAAKV,QAAV,EAAoB;AACnB,eAAO,KAAP;AACA;;AACD,aAAO,KAAKC,eAAL,CAAqBU,YAArB,CAAkC,KAAKX,QAAvC,EAAiDO,OAAjD,CAAP;AACA;AAjDF;AAAA;AAAA,WAmDQK,uBAAiC;AACvC,aAAO,KAAKX,eAAL,CAAqBW,WAArB,EAAP;AACA;AArDF;AAAA;AAAA,WAuDQC,mBAAe;AACrB,aAAO,KAAKZ,eAAL,CAAqBY,OAArB,EAAP;AACA;AAzDF;AAAA;AAAA,WA2DQC,yBAAqB;AAC3B,aAAO,KAAKb,eAAL,CAAqBa,aAArB,EAAP;AACA;AA7DF;AAAA;AAAA,WA+DQC,mBAAmB;AACzB,aAAO,KAAKd,eAAL,CAAqBc,OAArB,EAAP;AACA;AAjEF;AAAA;AAAA,WAmEQC,kCAAyC;AAC/C,aAAO,KAAKf,eAAL,CAAqBe,sBAArB,EAAP;AACA;AArEF;AAAA;AAAA,WAuEQC,wCAA+C;AACrD,aAAO,KAAKhB,eAAL,CAAqBgB,4BAArB,EAAP;AACA;AAzEF;AAAA;AAAA,WA2EQC,iCAAwC;AAC9C,aAAO,KAAKjB,eAAL,CAAqBiB,qBAArB,EAAP;AACA;AA7EF;AAAA;AAAA,WA+EQC,2BAAkC;AACxC,aAAO,KAAKlB,eAAL,CAAqBkB,eAArB,EAAP;AACA;AAjFF;AAAA;AAAA,WAmFQC,0CAAiD;AACvD,aAAO,KAAKnB,eAAL,CAAqBmB,8BAArB,EAAP;AACA;AArFF;;AAAA;AAAA","names":["invariant","isCallingCanDrop","DropTargetMonitorImpl","manager","targetId","internalMonitor","getMonitor","receiveHandlerId","getHandlerId","subscribeToStateChange","listener","options","canDrop","canDropOnTarget","isOver","isOverTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset"],"sources":["/Users/johannadeweerdt/Documents/school/erasmus/code/bm-lyd-deploy/frontend/node_modules/react-dnd/src/internals/DropTargetMonitorImpl.ts"],"sourcesContent":["import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../types/index.js'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options?: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}