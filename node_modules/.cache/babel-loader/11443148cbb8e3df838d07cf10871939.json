{"ast":null,"code":"import { invariant } from '@react-dnd/invariant';\nimport { useContext } from 'react';\nimport { DndContext } from '../core/index.js';\n/**\n * A hook to retrieve the DragDropManager from Context\n */\n\nexport function useDragDropManager() {\n  var _useContext = useContext(DndContext),\n      dragDropManager = _useContext.dragDropManager;\n\n  invariant(dragDropManager != null, 'Expected drag drop context');\n  return dragDropManager;\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,sBAA1B;AAEA,SAASC,UAAT,QAA2B,OAA3B;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AAEA;;;;AAGA,OAAO,SAASC,kBAAT,GAA+C;AACrD,oBAA4BF,UAAU,CAACC,UAAD,CAAtC;AAAA,MAAQE,eAAR,eAAQA,eAAR;;AACAJ,WAAS,CAACI,eAAe,IAAI,IAApB,EAA0B,4BAA1B,CAATJ;AACA,SAAOI,eAAP;AACA","names":["invariant","useContext","DndContext","useDragDropManager","dragDropManager"],"sources":["/Users/johannadeweerdt/Documents/school/erasmus/code/bm-lyd-deploy/frontend/node_modules/react-dnd/src/hooks/useDragDropManager.ts"],"sourcesContent":["import { invariant } from '@react-dnd/invariant'\nimport type { DragDropManager } from 'dnd-core'\nimport { useContext } from 'react'\n\nimport { DndContext } from '../core/index.js'\n\n/**\n * A hook to retrieve the DragDropManager from Context\n */\nexport function useDragDropManager(): DragDropManager {\n\tconst { dragDropManager } = useContext(DndContext)\n\tinvariant(dragDropManager != null, 'Expected drag drop context')\n\treturn dragDropManager as DragDropManager\n}\n"]},"metadata":{},"sourceType":"module"}