{"ast":null,"code":"import { isTouchEvent } from './predicates.js';\nconst ELEMENT_NODE = 1;\nexport function getNodeClientOffset(node) {\n  const el = node.nodeType === ELEMENT_NODE ? node : node.parentElement;\n\n  if (!el) {\n    return undefined;\n  }\n\n  const {\n    top,\n    left\n  } = el.getBoundingClientRect();\n  return {\n    x: left,\n    y: top\n  };\n}\nexport function getEventClientTouchOffset(e, lastTargetTouchFallback) {\n  if (e.targetTouches.length === 1) {\n    return getEventClientOffset(e.targetTouches[0]);\n  } else if (lastTargetTouchFallback && e.touches.length === 1) {\n    if (e.touches[0].target === lastTargetTouchFallback.target) {\n      return getEventClientOffset(e.touches[0]);\n    }\n  }\n\n  return;\n}\nexport function getEventClientOffset(e, lastTargetTouchFallback) {\n  if (isTouchEvent(e)) {\n    return getEventClientTouchOffset(e, lastTargetTouchFallback);\n  } else {\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n}","map":{"version":3,"mappings":"AAEA,SAASA,YAAT,QAA6B,iBAA7B;AAEA,MAAMC,YAAY,GAAG,CAArB;AAEA,OAAO,SAASC,mBAAT,CAA6BC,IAA7B,EAAiE;AACvE,QAAMC,EAAE,GAAGD,IAAI,CAACE,QAALF,KAAkBF,YAAlBE,GAAiCA,IAAjCA,GAAwCA,IAAI,CAACG,aAAxD;;AACA,MAAI,CAACF,EAAL,EAAS;AACR,WAAOG,SAAP;AACA;;AACD,QAAM;AAAEC,OAAF;AAAOC;AAAP,MAAgBL,EAAE,CAACM,qBAAHN,EAAtB;AACA,SAAO;AAAEO,KAAC,EAAEF,IAAL;AAAWG,KAAC,EAAEJ;AAAd,GAAP;AACA;AAED,OAAO,SAASK,yBAAT,CACNC,CADM,EAENC,uBAFM,EAGgB;AACtB,MAAID,CAAC,CAACE,aAAFF,CAAgBG,MAAhBH,KAA2B,CAA/B,EAAkC;AACjC,WAAOI,oBAAoB,CAACJ,CAAC,CAACE,aAAFF,CAAgB,CAAhBA,CAAD,CAA3B;AACA,GAFD,MAEO,IAAIC,uBAAuB,IAAID,CAAC,CAACK,OAAFL,CAAUG,MAAVH,KAAqB,CAApD,EAAuD;AAC7D,QAAIA,CAAE,CAACK,OAAFL,CAAU,CAAX,EAAwBM,MAAxB,KAAmCL,uBAAuB,CAACK,MAA/D,EAAuE;AACtE,aAAOF,oBAAoB,CAACJ,CAAC,CAACK,OAAFL,CAAU,CAAVA,CAAD,CAA3B;AACA;AACD;;AACD;AACA;AAED,OAAO,SAASI,oBAAT,CACNJ,CADM,EAENC,uBAFM,EAGgB;AACtB,MAAIf,YAAY,CAACc,CAAD,CAAhB,EAAqB;AACpB,WAAOD,yBAAyB,CAACC,CAAD,EAAIC,uBAAJ,CAAhC;AACA,GAFD,MAEO;AACN,WAAO;AACNJ,OAAC,EAAEG,CAAC,CAACO,OADC;AAENT,OAAC,EAAEE,CAAC,CAACQ;AAFC,KAAP;AAIA;AACD","names":["isTouchEvent","ELEMENT_NODE","getNodeClientOffset","node","el","nodeType","parentElement","undefined","top","left","getBoundingClientRect","x","y","getEventClientTouchOffset","e","lastTargetTouchFallback","targetTouches","length","getEventClientOffset","touches","target","clientX","clientY"],"sources":["/Users/johannadeweerdt/Documents/school/erasmus/code/lydoplevelse-test/node_modules/react-dnd-touch-backend/src/utils/offsets.ts"],"sourcesContent":["import type { XYCoord } from 'dnd-core'\n\nimport { isTouchEvent } from './predicates.js'\n\nconst ELEMENT_NODE = 1\n\nexport function getNodeClientOffset(node: Element): XYCoord | undefined {\n\tconst el = node.nodeType === ELEMENT_NODE ? node : node.parentElement\n\tif (!el) {\n\t\treturn undefined\n\t}\n\tconst { top, left } = el.getBoundingClientRect()\n\treturn { x: left, y: top }\n}\n\nexport function getEventClientTouchOffset(\n\te: TouchEvent,\n\tlastTargetTouchFallback?: Touch,\n): XYCoord | undefined {\n\tif (e.targetTouches.length === 1) {\n\t\treturn getEventClientOffset(e.targetTouches[0] as Touch)\n\t} else if (lastTargetTouchFallback && e.touches.length === 1) {\n\t\tif ((e.touches[0] as Touch).target === lastTargetTouchFallback.target) {\n\t\t\treturn getEventClientOffset(e.touches[0] as Touch)\n\t\t}\n\t}\n\treturn\n}\n\nexport function getEventClientOffset(\n\te: TouchEvent | Touch | MouseEvent,\n\tlastTargetTouchFallback?: Touch,\n): XYCoord | undefined {\n\tif (isTouchEvent(e)) {\n\t\treturn getEventClientTouchOffset(e, lastTargetTouchFallback)\n\t} else {\n\t\treturn {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY,\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}