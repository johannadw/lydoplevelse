{"ast":null,"code":"var _jsxFileName = \"/Users/johannadeweerdt/Documents/school/erasmus/code/lydoplevelse-test/src/components/Player/Player.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport MaxiPlayer from './MaxiPlayer';\nimport MiniPlayer from './MiniPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = _ref => {\n  _s();\n\n  let {\n    audio,\n    onHidePlayer,\n    currentlyPlaying,\n    onTogglePlaying,\n    isPlaying,\n    playNext,\n    playPrev,\n    playingSpeed,\n    togglePlayingSpeed,\n    currentSpeed\n  } = _ref;\n  let [showMini, setShowMini] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: showMini ? /*#__PURE__*/_jsxDEV(MiniPlayer, {\n      isPlaying: isPlaying,\n      onHidePlayer: onHidePlayer,\n      onTogglePlaying: onTogglePlaying,\n      onTogglePlayerSize: () => setShowMini(!showMini),\n      currentlyPlaying: currentlyPlaying,\n      audio: audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(MaxiPlayer, {\n      isPlaying: isPlaying,\n      onTogglePlaying: onTogglePlaying,\n      onTogglePlayerSize: () => setShowMini(!showMini),\n      currentlyPlaying: currentlyPlaying,\n      playNext: playNext,\n      playPrev: playPrev,\n      playingSpeed: playingSpeed,\n      togglePlayingSpeed: togglePlayingSpeed,\n      currentSpeed: currentSpeed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Player, \"Eh0aTJftr/q387KJa044+ICxL1c=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/johannadeweerdt/Documents/school/erasmus/code/lydoplevelse-test/src/components/Player/Player.js"],"names":["useState","MaxiPlayer","MiniPlayer","Player","audio","onHidePlayer","currentlyPlaying","onTogglePlaying","isPlaying","playNext","playPrev","playingSpeed","togglePlayingSpeed","currentSpeed","showMini","setShowMini"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAIA,MAAMC,MAAM,GAAG,QAA+I;AAAA;;AAAA,MAA9I;AAAEC,IAAAA,KAAF;AAASC,IAAAA,YAAT;AAAuBC,IAAAA,gBAAvB;AAAyCC,IAAAA,eAAzC;AAA0DC,IAAAA,SAA1D;AAAqEC,IAAAA,QAArE;AAA+EC,IAAAA,QAA/E;AAAyFC,IAAAA,YAAzF;AAAuGC,IAAAA,kBAAvG;AAA2HC,IAAAA;AAA3H,GAA8I;AAC5J,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,IAAD,CAAtC;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,cAGMc,QAAQ,gBACJ,QAAC,UAAD;AACI,MAAA,SAAS,EAAGN,SADhB;AAEI,MAAA,YAAY,EAAGH,YAFnB;AAGI,MAAA,eAAe,EAAGE,eAHtB;AAII,MAAA,kBAAkB,EAAG,MAAMQ,WAAW,CAAE,CAACD,QAAH,CAJ1C;AAKI,MAAA,gBAAgB,EAAGR,gBALvB;AAMI,MAAA,KAAK,EAAGF;AANZ;AAAA;AAAA;AAAA;AAAA,YADI,gBAQJ,QAAC,UAAD;AACI,MAAA,SAAS,EAAGI,SADhB;AAEI,MAAA,eAAe,EAAGD,eAFtB;AAGI,MAAA,kBAAkB,EAAG,MAAMQ,WAAW,CAAE,CAACD,QAAH,CAH1C;AAII,MAAA,gBAAgB,EAAGR,gBAJvB;AAKI,MAAA,QAAQ,EAAGG,QALf;AAMI,MAAA,QAAQ,EAAGC,QANf;AAOI,MAAA,YAAY,EAAGC,YAPnB;AAQI,MAAA,kBAAkB,EAAGC,kBARzB;AASI,MAAA,YAAY,EAAGC;AATnB;AAAA;AAAA;AAAA;AAAA;AAXV;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA9BD;;GAAMV,M;;KAAAA,M;AAgCN,eAAeA,MAAf","sourcesContent":["import { useState } from 'react';\nimport MaxiPlayer from './MaxiPlayer';\nimport MiniPlayer from './MiniPlayer';\n\n\n\nconst Player = ({ audio, onHidePlayer, currentlyPlaying, onTogglePlaying, isPlaying, playNext, playPrev, playingSpeed, togglePlayingSpeed, currentSpeed }) => {\n  let [showMini, setShowMini] = useState(true);\n\n\n\n  return (\n    <div className=\"player\" >\n        \n        {/* { audio.paused ? console.log(\"audio paused\") : console.log(\"audio playing\")} */}\n        { showMini \n            ? <MiniPlayer \n                  isPlaying={ isPlaying } \n                  onHidePlayer={ onHidePlayer }\n                  onTogglePlaying={ onTogglePlaying } \n                  onTogglePlayerSize={ () => setShowMini( !showMini ) } \n                  currentlyPlaying={ currentlyPlaying }\n                  audio={ audio } />\n            : <MaxiPlayer \n                  isPlaying={ isPlaying } \n                  onTogglePlaying={ onTogglePlaying } \n                  onTogglePlayerSize={ () => setShowMini( !showMini ) } \n                  currentlyPlaying={ currentlyPlaying }\n                  playNext={ playNext }\n                  playPrev={ playPrev }\n                  playingSpeed={ playingSpeed }\n                  togglePlayingSpeed={ togglePlayingSpeed } \n                  currentSpeed={ currentSpeed } /> \n        }\n    </div>\n  )\n}\n\nexport default Player"]},"metadata":{},"sourceType":"module"}