{"ast":null,"code":"import _classCallCheck from \"/Users/johannadeweerdt/Documents/school/erasmus/code/lydoplevelse/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/johannadeweerdt/Documents/school/erasmus/code/lydoplevelse/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { invariant } from '@react-dnd/invariant';\nvar isCallingCanDrag = false;\nvar isCallingIsDragging = false;\nexport var DragSourceMonitorImpl = /*#__PURE__*/function () {\n  function DragSourceMonitorImpl(manager) {\n    _classCallCheck(this, DragSourceMonitorImpl);\n\n    this.sourceId = null;\n    this.internalMonitor = manager.getMonitor();\n  }\n\n  _createClass(DragSourceMonitorImpl, [{\n    key: \"receiveHandlerId\",\n    value: function receiveHandlerId(sourceId) {\n      this.sourceId = sourceId;\n    }\n  }, {\n    key: \"getHandlerId\",\n    value: function getHandlerId() {\n      return this.sourceId;\n    }\n  }, {\n    key: \"canDrag\",\n    value: function canDrag() {\n      invariant(!isCallingCanDrag, 'You may not call monitor.canDrag() inside your canDrag() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n\n      try {\n        isCallingCanDrag = true;\n        return this.internalMonitor.canDragSource(this.sourceId);\n      } finally {\n        isCallingCanDrag = false;\n      }\n    }\n  }, {\n    key: \"isDragging\",\n    value: function isDragging() {\n      if (!this.sourceId) {\n        return false;\n      }\n\n      invariant(!isCallingIsDragging, 'You may not call monitor.isDragging() inside your isDragging() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n\n      try {\n        isCallingIsDragging = true;\n        return this.internalMonitor.isDraggingSource(this.sourceId);\n      } finally {\n        isCallingIsDragging = false;\n      }\n    }\n  }, {\n    key: \"subscribeToStateChange\",\n    value: function subscribeToStateChange(listener, options) {\n      return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n  }, {\n    key: \"isDraggingSource\",\n    value: function isDraggingSource(sourceId) {\n      return this.internalMonitor.isDraggingSource(sourceId);\n    }\n  }, {\n    key: \"isOverTarget\",\n    value: function isOverTarget(targetId, options) {\n      return this.internalMonitor.isOverTarget(targetId, options);\n    }\n  }, {\n    key: \"getTargetIds\",\n    value: function getTargetIds() {\n      return this.internalMonitor.getTargetIds();\n    }\n  }, {\n    key: \"isSourcePublic\",\n    value: function isSourcePublic() {\n      return this.internalMonitor.isSourcePublic();\n    }\n  }, {\n    key: \"getSourceId\",\n    value: function getSourceId() {\n      return this.internalMonitor.getSourceId();\n    }\n  }, {\n    key: \"subscribeToOffsetChange\",\n    value: function subscribeToOffsetChange(listener) {\n      return this.internalMonitor.subscribeToOffsetChange(listener);\n    }\n  }, {\n    key: \"canDragSource\",\n    value: function canDragSource(sourceId) {\n      return this.internalMonitor.canDragSource(sourceId);\n    }\n  }, {\n    key: \"canDropOnTarget\",\n    value: function canDropOnTarget(targetId) {\n      return this.internalMonitor.canDropOnTarget(targetId);\n    }\n  }, {\n    key: \"getItemType\",\n    value: function getItemType() {\n      return this.internalMonitor.getItemType();\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem() {\n      return this.internalMonitor.getItem();\n    }\n  }, {\n    key: \"getDropResult\",\n    value: function getDropResult() {\n      return this.internalMonitor.getDropResult();\n    }\n  }, {\n    key: \"didDrop\",\n    value: function didDrop() {\n      return this.internalMonitor.didDrop();\n    }\n  }, {\n    key: \"getInitialClientOffset\",\n    value: function getInitialClientOffset() {\n      return this.internalMonitor.getInitialClientOffset();\n    }\n  }, {\n    key: \"getInitialSourceClientOffset\",\n    value: function getInitialSourceClientOffset() {\n      return this.internalMonitor.getInitialSourceClientOffset();\n    }\n  }, {\n    key: \"getSourceClientOffset\",\n    value: function getSourceClientOffset() {\n      return this.internalMonitor.getSourceClientOffset();\n    }\n  }, {\n    key: \"getClientOffset\",\n    value: function getClientOffset() {\n      return this.internalMonitor.getClientOffset();\n    }\n  }, {\n    key: \"getDifferenceFromInitialOffset\",\n    value: function getDifferenceFromInitialOffset() {\n      return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n  }]);\n\n  return DragSourceMonitorImpl;\n}();","map":{"version":3,"mappings":"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","names":["invariant","isCallingCanDrag","isCallingIsDragging","DragSourceMonitorImpl","manager","sourceId","internalMonitor","getMonitor","receiveHandlerId","getHandlerId","canDrag","canDragSource","isDragging","isDraggingSource","subscribeToStateChange","listener","options","isOverTarget","targetId","getTargetIds","isSourcePublic","getSourceId","subscribeToOffsetChange","canDropOnTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset"],"sources":["/Users/johannadeweerdt/Documents/school/erasmus/code/lydoplevelse/node_modules/react-dnd/src/internals/DragSourceMonitorImpl.ts"],"sourcesContent":["import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DragSourceMonitor } from '../types/index.js'\n\nlet isCallingCanDrag = false\nlet isCallingIsDragging = false\n\nexport class DragSourceMonitorImpl implements DragSourceMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate sourceId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(sourceId: Identifier | null): void {\n\t\tthis.sourceId = sourceId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.sourceId\n\t}\n\n\tpublic canDrag(): boolean {\n\t\tinvariant(\n\t\t\t!isCallingCanDrag,\n\t\t\t'You may not call monitor.canDrag() inside your canDrag() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrag = true\n\t\t\treturn this.internalMonitor.canDragSource(this.sourceId as Identifier)\n\t\t} finally {\n\t\t\tisCallingCanDrag = false\n\t\t}\n\t}\n\n\tpublic isDragging(): boolean {\n\t\tif (!this.sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingIsDragging,\n\t\t\t'You may not call monitor.isDragging() inside your isDragging() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingIsDragging = true\n\t\t\treturn this.internalMonitor.isDraggingSource(this.sourceId)\n\t\t} finally {\n\t\t\tisCallingIsDragging = false\n\t\t}\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic isDraggingSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.isDraggingSource(sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: Identifier,\n\t\toptions?: { shallow: boolean },\n\t): boolean {\n\t\treturn this.internalMonitor.isOverTarget(targetId, options)\n\t}\n\n\tpublic getTargetIds(): Identifier[] {\n\t\treturn this.internalMonitor.getTargetIds()\n\t}\n\n\tpublic isSourcePublic(): boolean | null {\n\t\treturn this.internalMonitor.isSourcePublic()\n\t}\n\n\tpublic getSourceId(): Identifier | null {\n\t\treturn this.internalMonitor.getSourceId()\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToOffsetChange(listener)\n\t}\n\n\tpublic canDragSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDragSource(sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDropOnTarget(targetId)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}