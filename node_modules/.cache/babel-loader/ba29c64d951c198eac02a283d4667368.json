{"ast":null,"code":"var _jsxFileName = \"/Users/johannadeweerdt/Documents/school/erasmus/code/lydoplevelse-test/src/components/Player/PodcastList.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router\";\nimport PodcastListItem from \"./PodcastListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PodcastList = _ref => {\n  _s();\n\n  let {\n    podcasts,\n    onShowPlayer,\n    queue,\n    addToQueue,\n    onShowQueue,\n    onPlay,\n    checkInQueue\n  } = _ref;\n  const params = useParams();\n  const podcast = podcasts.filter(podcast => podcast.id == params.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"podcast-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"podcast-name\",\n      children: podcast[0].name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"podcast-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: podcast[0].image,\n        alt: \"\",\n        className: \"podcast-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"podcast-about\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"podcast-theme\",\n          children: [podcast[0].theme, \". \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 38\n        }, this), podcast[0].teaser]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"podcast-follow\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"podcast-list-title\",\n        children: [\"F\\xF8lg \", podcast[0].name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"../../assets/logo/24syv_logo.svg\").default,\n        alt: \"\",\n        className: \"follow-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"podcast-list-queue\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"podcast-list-title\",\n        children: \"Alle episoder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), podcast[0].episodes.map(episode => /*#__PURE__*/_jsxDEV(PodcastListItem, {\n        episode: episode,\n        onShowPlayer: onShowPlayer,\n        onShowQueue: onShowQueue,\n        addToQueue: addToQueue,\n        queue: queue,\n        onPlay: onPlay,\n        checkInQueue: checkInQueue\n      }, episode.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PodcastList, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = PodcastList;\nexport default PodcastList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PodcastList\");","map":{"version":3,"sources":["/Users/johannadeweerdt/Documents/school/erasmus/code/lydoplevelse-test/src/components/Player/PodcastList.js"],"names":["useParams","PodcastListItem","PodcastList","podcasts","onShowPlayer","queue","addToQueue","onShowQueue","onPlay","checkInQueue","params","podcast","filter","id","name","image","theme","teaser","require","default","episodes","map","episode"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,cAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAGA,MAAMC,WAAW,GAAG,QAAsF;AAAA;;AAAA,MAArF;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA,UAAjC;AAA6CC,IAAAA,WAA7C;AAA0DC,IAAAA,MAA1D;AAAkEC,IAAAA;AAAlE,GAAqF;AACxG,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAMW,OAAO,GAAGR,QAAQ,CAACS,MAAT,CAAkBD,OAAD,IAAaA,OAAO,CAACE,EAAR,IAAcH,MAAM,CAACG,EAAnD,CAAhB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,gBAA+BF,OAAO,CAAC,CAAD,CAAP,CAAWG;AAA1C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAGH,OAAO,CAAC,CAAD,CAAP,CAAWI,KAAtB;AAA8B,QAAA,GAAG,EAAC,EAAlC;AAAqC,QAAA,SAAS,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA,gCAA6B;AAAM,UAAA,SAAS,EAAC,eAAhB;AAAA,qBAAkCJ,OAAO,CAAC,CAAD,CAAP,CAAWK,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA7B,EAA4FL,OAAO,CAAC,CAAD,CAAP,CAAWM,MAAvG;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACA;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAA,+BAAyCN,OAAO,CAAC,CAAD,CAAP,CAAWG,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,GAAG,EAAGI,OAAO,CAAC,kCAAD,CAAP,CAA4CC,OAAvD;AAAgE,QAAA,GAAG,EAAC,EAApE;AAAuE,QAAA,SAAS,EAAC;AAAjF;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAWE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEMR,OAAO,CAAC,CAAD,CAAP,CAAWS,QAAX,CAAoBC,GAApB,CAA2BC,OAAF,iBACrB,QAAC,eAAD;AACkB,QAAA,OAAO,EAAGA,OAD5B;AAEkB,QAAA,YAAY,EAAGlB,YAFjC;AAGkB,QAAA,WAAW,EAAGG,WAHhC;AAIkB,QAAA,UAAU,EAAGD,UAJ/B;AAKkB,QAAA,KAAK,EAAGD,KAL1B;AAMkB,QAAA,MAAM,EAAGG,MAN3B;AAOkB,QAAA,YAAY,EAAGC;AAPjC,SAAuBa,OAAO,CAACT,EAA/B;AAAA;AAAA;AAAA;AAAA,cADJ,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA9BD;;GAAMX,W;UACWF,S;;;KADXE,W;AAgCN,eAAeA,WAAf","sourcesContent":["import { useParams } from \"react-router\";\nimport PodcastListItem from \"./PodcastListItem\";\n\n\nconst PodcastList = ({ podcasts, onShowPlayer, queue, addToQueue, onShowQueue, onPlay, checkInQueue }) => {\n  const params = useParams();\n  const podcast = podcasts.filter( (podcast) => podcast.id == params.id )\n\n  return (\n    <div className=\"podcast-list\">\n      <h1 className=\"podcast-name\">{ podcast[0].name }</h1>\n      <div className=\"podcast-details\">\n        <img src={ podcast[0].image } alt=\"\" className=\"podcast-image\" />\n        <p className=\"podcast-about\"><span className=\"podcast-theme\">{ podcast[0].theme }. </span>{ podcast[0].teaser }</p>\n      </div>\n      <div className=\"podcast-follow\">\n      <p className=\"podcast-list-title\">FÃ¸lg { podcast[0].name }</p>\n      <img src={ require(\"../../assets/logo/24syv_logo.svg\").default} alt=\"\" className=\"follow-logo\"/>\n\n      </div>\n      <div className=\"podcast-list-queue\">\n        <p className=\"podcast-list-title\">Alle episoder</p>\n          { podcast[0].episodes.map( ( episode ) => ( \n                <PodcastListItem  key={episode.id} \n                                  episode={ episode } \n                                  onShowPlayer={ onShowPlayer } \n                                  onShowQueue={ onShowQueue } \n                                  addToQueue={ addToQueue }\n                                  queue={ queue }\n                                  onPlay={ onPlay }\n                                  checkInQueue={ checkInQueue } /> ) ) }\n      </div>\n    </div>\n  )\n}\n\nexport default PodcastList"]},"metadata":{},"sourceType":"module"}